// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrestApp.Api.DataManagement.Database;

namespace PrestApp.Api.Migrations
{
    [DbContext(typeof(DB_PrestAppContext))]
    partial class DB_PrestAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClAmortizaciones", b =>
                {
                    b.Property<int>("Amort_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cli_ID");

                    b.Property<int>("ModPag_ID");

                    b.Property<int>("Prest_ID");

                    b.HasKey("Amort_ID");

                    b.HasIndex("Cli_ID");

                    b.HasIndex("ModPag_ID");

                    b.ToTable("Amortizaciones");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClClientes", b =>
                {
                    b.Property<int>("Cli_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cli_Apellidos");

                    b.Property<string>("Cli_Correo");

                    b.Property<string>("Cli_Cédula");

                    b.Property<int>("Cli_Dependientes");

                    b.Property<string>("Cli_Dirección");

                    b.Property<string>("Cli_EstadoCivil");

                    b.Property<string>("Cli_FechaNacimiento");

                    b.Property<string>("Cli_Genero")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<decimal>("Cli_Ingresos");

                    b.Property<string>("Cli_Nombres");

                    b.Property<string>("Cli_TelCasa");

                    b.Property<string>("Cli_TelCelular");

                    b.Property<int>("Ocu_ID");

                    b.Property<int>("TitAcdm_ID");

                    b.HasKey("Cli_ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClModalidadesDePago", b =>
                {
                    b.Property<int>("ModPag_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModPag_Nombre")
                        .HasMaxLength(30);

                    b.HasKey("ModPag_ID");

                    b.ToTable("ModalidadesDePago");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClOcupaciones", b =>
                {
                    b.Property<int>("Ocu_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ocu_Nombre")
                        .HasMaxLength(50);

                    b.HasKey("Ocu_ID");

                    b.ToTable("Ocupaciones");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClPagos", b =>
                {
                    b.Property<int>("Pag_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cli_ID");

                    b.Property<double>("Pag_BalanceInicial");

                    b.Property<double>("Pag_CapitalPendiente");

                    b.Property<double>("Pag_CuotaPrestamo");

                    b.Property<DateTime>("Pag_Fecha");

                    b.Property<string>("Pag_FormaPago");

                    b.Property<double>("Pag_Interes");

                    b.Property<double>("Pag_InteresAcumulado");

                    b.Property<double>("Pag_MontoFinal");

                    b.Property<int>("Pag_Mora");

                    b.HasKey("Pag_ID");

                    b.HasIndex("Cli_ID");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClPrestamos", b =>
                {
                    b.Property<int>("Prest_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cli_ID");

                    b.Property<int>("Prest_Cuotas");

                    b.Property<DateTime>("Prest_FechaCreacion");

                    b.Property<DateTime>("Prest_FechaPrimerPago");

                    b.Property<double>("Prest_Interes");

                    b.Property<double>("Prest_Monto");

                    b.HasKey("Prest_ID");

                    b.HasIndex("Cli_ID");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClRoles", b =>
                {
                    b.Property<int>("IDRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rol_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnName("Rol_Nombre");

                    b.HasKey("IDRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClTitulosAcademicos", b =>
                {
                    b.Property<int>("TitAcdm_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TitAcdm_Nombre");

                    b.HasKey("TitAcdm_ID");

                    b.ToTable("TitulosAcademicos");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClUsuarios", b =>
                {
                    b.Property<int>("Usu_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Rol_ID");

                    b.Property<byte[]>("Usu_Clave");

                    b.Property<string>("Usu_Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Usu_NombreReal")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("Usu_ID");

                    b.HasIndex("Rol_ID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClAmortizaciones", b =>
                {
                    b.HasOne("PrestApp.Api.DataManagement.Database.Models.ClClientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("Cli_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PrestApp.Api.DataManagement.Database.Models.ClModalidadesDePago", "ClModalidadesDePago")
                        .WithMany()
                        .HasForeignKey("ModPag_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClPagos", b =>
                {
                    b.HasOne("PrestApp.Api.DataManagement.Database.Models.ClClientes", "ClCliente")
                        .WithMany()
                        .HasForeignKey("Cli_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClPrestamos", b =>
                {
                    b.HasOne("PrestApp.Api.DataManagement.Database.Models.ClClientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("Cli_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PrestApp.Api.DataManagement.Database.Models.ClUsuarios", b =>
                {
                    b.HasOne("PrestApp.Api.DataManagement.Database.Models.ClRoles", "Rol")
                        .WithMany()
                        .HasForeignKey("Rol_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
